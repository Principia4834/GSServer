<Window x:Class="GS.ChartViewer.Main.MainWindowV"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" TextElement.FontSize="14" ResizeMode="CanResizeWithGrip" WindowStyle="None" AllowsTransparency="True" xmlns:properties="clr-namespace:GS.ChartViewer.Properties"
        xmlns:controls="clr-namespace:GS.ChartViewer.Controls"
        xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        xmlns:Interactions="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:shared="clr-namespace:GS.Shared;assembly=GS.Shared"
        xmlns:enums="clr-namespace:LiveCharts.Geared;assembly=LiveCharts.Geared"
        xmlns:main="clr-namespace:GS.ChartViewer.Main"
        xmlns:domain1="clr-namespace:GS.Shared.Domain;assembly=GS.Shared" Closed="MainWindow_OnClosed" TextOptions.TextFormattingMode="Display" ContentRendered="MainWindow_OnContentRendered" WindowState="{Binding WindowState, Source={x:Static properties:ChartViewer.Default}, Mode=TwoWay}"
        Height="{Binding WindowHeight, Source={x:Static properties:ChartViewer.Default}, Mode=TwoWay}" 
        Width="{Binding WindowWidth, Source={x:Static properties:ChartViewer.Default}, Mode=TwoWay}"
        Left="{Binding WindowLeft, Source={x:Static properties:ChartViewer.Default}, Mode=TwoWay}"
        Top="{Binding WindowTop, Source={x:Static properties:ChartViewer.Default}, Mode=TwoWay}"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}" Title="GS LogView" FontSize="13" d:DataContext="{d:DesignInstance main:MainWindowVm}">
    <Window.Resources>
        <BooleanToVisibilityConverter  x:Key="BoolToVis" />
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="DimGray"/>
            <Setter Property="BorderBrush" Value="DimGray"/>
        </Style>
        <Style TargetType="ItemsControl" x:Key="LogItemsStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <ScrollViewer CanContentScroll="True" >
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel IsItemsHost="True"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <controls:WindowTitleBar Grid.Row="0" />
        <md:DialogHost Grid.Row="1"  CloseOnClickAway="True" IsOpen="{Binding IsDialogOpen}" DialogContent="{Binding DialogContent}" >
            <Grid >
            <md:DrawerHost BorderThickness="2" IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}" BorderBrush="{DynamicResource MaterialDesignDivider}">
                <md:DrawerHost.LeftDrawerContent>
                    <Grid Width="400">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40" />
                        <RowDefinition Height="300"/>
                        <RowDefinition />
                    </Grid.RowDefinitions>
                            <Label Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="18"  Foreground="{DynamicResource PrimaryHueMidBrush}">Settings</Label>
                            <ToggleButton Grid.Row="0" Grid.Column="0" DockPanel.Dock="Top" HorizontalAlignment="Right" Margin="5" 
                                          Style="{StaticResource MaterialDesignHamburgerToggleButton}" 
                                          Command="{x:Static md:DrawerHost.CloseDrawerCommand}"
                                          CommandParameter="{x:Static Dock.Left}"
                                          IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}"/>
                            <StackPanel Grid.Row="1" Grid.Column="0">
                                <ComboBox Margin="20" md:HintAssist.Hint="{StaticResource optLanguage}" MinWidth="10" HorizontalAlignment="Left" ItemsSource="{Binding Languages}" Style="{StaticResource MaterialDesignFloatingHintComboBox}" ToolTip="{StaticResource optLanguage}">
                                        <ComboBox.Text>
                                            <Binding Path="Lang" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" />
                                        </ComboBox.Text>
                                        <ComboBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel />
                                            </ItemsPanelTemplate>
                                        </ComboBox.ItemsPanel>
                                    </ComboBox>
                            </StackPanel>
                    </Grid>
                </md:DrawerHost.LeftDrawerContent>
                <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="200"/>
                    <RowDefinition Height="10"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="60"/>
                    </Grid.RowDefinitions>
                <ToggleButton Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Top" IsChecked="False" x:Name="MenuToggleButton"
                      Command="{x:Static md:DrawerHost.OpenDrawerCommand}" CommandParameter="{x:Static Dock.Left}"
                      Style="{StaticResource MaterialDesignHamburgerToggleButton}"/>
                <Grid Grid.Row="1" Grid.ColumnSpan="3" IsSharedSizeScope="True" Margin="10,5,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Border CornerRadius="2" BorderBrush="Gray" Background="{StaticResource MaterialDesignCardBackground}" BorderThickness="2" DockPanel.Dock="Top">
                        <Grid HorizontalAlignment="Left" >
                            <Grid.RowDefinitions>
                                 <RowDefinition Height="30"/>
                                 <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="125"/>
                                <ColumnDefinition Width="55"/>
                                <ColumnDefinition Width="55"/>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="35"/>
                                </Grid.ColumnDefinitions>
                                    <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource chtNumber}"/>
                                    <Label Grid.Row="0" Grid.Column="1" Content="{DynamicResource chtStart}"/>
                                    <Label Grid.Row="0" Grid.Column="2" Content="{DynamicResource chtEnd}"/>
                                    <Label Grid.Row="0" Grid.Column="3" Content="{DynamicResource chtLength}"/>
                                    <Label Grid.Row="0" Grid.Column="4" Content="{DynamicResource chtType}"/>
                            <ListView Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="6" ItemsSource="{Binding Path=IndexItems}" SelectedItem="{Binding SelectedIndex}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                <ListView.ItemTemplate>
                                    <DataTemplate DataType="{x:Type main:IndexItem}">
                                            <Grid Margin="-4" >
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="15"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="20"/>
                                                <ColumnDefinition Width="125"/>
                                                <ColumnDefinition Width="55"/>
                                                <ColumnDefinition Width="55"/>
                                                <ColumnDefinition Width="60"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" Text="{Binding Path=RecNo}" />
                                            <TextBlock Grid.Column="1" Text="{Binding Path=StartTime, StringFormat=\{0:MM\\-dd\\-yyyy\\ HH\\:mm\\:ss\}}"/>
                                            <TextBlock Grid.Column="2" Text="{Binding Path=EndTime, StringFormat=HH\\:mm\\:ss}"/>
                                            <TextBlock Grid.Column="3" Text="{Binding Path=TimeLength, StringFormat=hh\\:mm\\:ss}"/>
                                            <TextBlock Grid.Column="4" Text="{Binding Path=Type}"/>
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </Grid>
                    </Border>
                    <StackPanel Margin="15,0,15,0" Grid.Row="0" Grid.Column="1" Orientation="Vertical">
                                <Button Style="{StaticResource MaterialDesignRaisedDarkButton}" Command="{Binding ClickOpenFileCommand}" Content="{DynamicResource chtOpen}"/>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,0" >
                                    <ComboBox md:HintAssist.Hint="{DynamicResource chtQuality}" MinWidth="10" ToolTip="{DynamicResource chtQuality}" Width="65" 
                                          ItemsSource="{Binding Source={domain1:EnumBindingSource {x:Type enums:Quality}}}"
                                      Style="{StaticResource MaterialDesignFloatingHintComboBox}" HorizontalAlignment="Left">
                                <ComboBox.Text>
                                    <Binding Path="ChartQuality" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                </ComboBox.Text>
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>
                                <StackPanel Orientation="Vertical" Margin="15,0,0,0">
                                        <TextBlock Margin="0,0,10,10" Text="{DynamicResource chtViewLog}"/>
                                        <ToggleButton IsChecked="{Binding LogTextVis, Mode=TwoWay}" Style="{StaticResource MaterialDesignSwitchAccentToggleButton}" ToolTip="{DynamicResource chtViewLog}">
                                        <md:PackIcon Kind="Pin" RenderTransformOrigin=".5,.5">
                                            <md:PackIcon.RenderTransform>
                                                <RotateTransform Angle="45" />
                                            </md:PackIcon.RenderTransform>
                                        </md:PackIcon>
                                        <md:ToggleButtonAssist.OnContent>
                                            <md:PackIcon Kind="Pin" />
                                        </md:ToggleButtonAssist.OnContent>
                                    </ToggleButton>
                                </StackPanel>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0,15,0,0" HorizontalAlignment="Center">
                                <Button Margin="0,0,0,0" Height="30" ToolTip="Fit Xy" Style="{StaticResource MaterialDesignRaisedDarkButton}" Command="{Binding ClickChartSizeCmd}" Content="Reset"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"  Margin="0,5,0,0">
                                    <TextBlock VerticalAlignment="Center" Margin="0,0,0,0" Text="{DynamicResource chtZoom}"/>
                                <RadioButton GroupName="zoom" Margin="5,0,0,0" Content="Xy" Command="{Binding Path=ClickChartZoomCmd}" CommandParameter="Xy" IsChecked="True" />
                                <RadioButton GroupName="zoom" Margin="5,0,0,0" Content="X" Command="{Binding Path=ClickChartZoomCmd}" CommandParameter="X"/>
                                <RadioButton GroupName="zoom" Margin="5,0,0,0" Content="Y" Command="{Binding Path=ClickChartZoomCmd}" CommandParameter="Y"/>
                           </StackPanel>
                    </StackPanel>
                    <Grid Grid.Row="0" Grid.Column="2" Margin="0,0,10,0" >
                            <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0" CornerRadius="2" BorderBrush="Gray" Margin="0,0,10,0" Background="{StaticResource MaterialDesignCardBackground}" BorderThickness="2">
                                <ItemsControl MinWidth="200" Margin="5,0,0,0" ItemsSource="{Binding DataKeys, Mode=TwoWay}" Style="{StaticResource LogItemsStyle}" ScrollViewer.HorizontalScrollBarVisibility="Auto" >
                            <ItemsControl.ItemTemplate>
                                <DataTemplate >
                                    <Grid MinWidth="300">
                                          <TextBlock>
                                              <d:TextBlock.DataContext>
                                                  <main:DataKey />
                                              </d:TextBlock.DataContext>
                                              <TextBlock.Text>
                                                <MultiBinding StringFormat="{}{0} = {1}">
                                                    <Binding Path="Key" />
                                                    <Binding Path="Value" />
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        </Border>
                        <Grid Grid.Column="1" >
                            <Grid.Background>
                                <ImageBrush ImageSource="../Resources/GSS ChartViewer.jpg"  Stretch="Uniform" Opacity=".5"/>
                            </Grid.Background>
                            <Border CornerRadius="2" BorderBrush="Gray" Background="{StaticResource MaterialDesignCardBackground}" BorderThickness="2"
                                Visibility="{Binding Path=LogTextVis, Converter={StaticResource BoolToVis}}">
                            <ItemsControl Margin="5,0,0,0" ItemsSource="{Binding Path=LogText, IsAsync=True}" Style="{StaticResource LogItemsStyle}" ScrollViewer.HorizontalScrollBarVisibility="Auto" >
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate >
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding}" />
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Border>
                    </Grid>
                    </Grid>
                </Grid>
                <GridSplitter Margin="0,5,0,0" Grid.Row="2" Height="4" HorizontalAlignment="Stretch"  />
                    <lvc:CartesianChart Grid.Row="3" Margin="5,0,0,0" Foreground="DarkGray" Hoverable="True" LegendLocation="Top" Zoom="{Binding Zoom}" 
                                        DisableAnimations="{Binding DisableAnimations, Mode=OneWay}" Series="{Binding ChartCollection, Mode=OneTime}" 
                                        AnimationsSpeed="{Binding AnimationsSpeed}">
                        <lvc:CartesianChart.DataTooltip>
                            <lvc:DefaultTooltip SelectionMode="OnlySender" Foreground="Black" />
                        </lvc:CartesianChart.DataTooltip>
                        <lvc:CartesianChart.AxisX >
                            <lvc:Axis FontSize="15" DisableAnimations="True" Foreground="DarkGray" ShowLabels="True" RangeChanged="Axis_OnRangeChanged" 
                                      Title="{DynamicResource titChartTimeline}" LabelFormatter="{Binding FormatterX, Mode=TwoWay}" MaxValue="{Binding AxisXMax, Mode=TwoWay}" 
                                      MinValue="{Binding AxisXMin, Mode=TwoWay}" Unit="{Binding AxisXUnit, Mode=TwoWay}">
                                <lvc:Axis.Separator>
                                    <lvc:Separator Stroke="DarkGray" StrokeThickness=".2" IsEnabled="True" />
                                </lvc:Axis.Separator>
                                </lvc:Axis>
                        </lvc:CartesianChart.AxisX>
                        <lvc:CartesianChart.AxisY>
                            <lvc:Axis FontSize="15" Foreground="DarkGray" ShowLabels="True" DisableAnimations="True" Title="{Binding Path=Scale, StringFormat='\{0} (y)'}" 
                                      LabelFormatter="{Binding FormatterY, Mode=TwoWay}" MaxValue="{Binding AxisYMax, Mode=TwoWay}" MinValue="{Binding AxisYMin, Mode=TwoWay}" 
                                      Unit="{Binding AxisYUnit, Mode=TwoWay}">
                                <lvc:Axis.Sections >
                                    <lvc:AxisSection Value="0" StrokeThickness=".5" Stroke="DarkGray" DisableAnimations="True"></lvc:AxisSection>
                                </lvc:Axis.Sections>
                                <lvc:Axis.Separator>
                                    <lvc:Separator Stroke="DimGray" StrokeThickness="1" />
                                </lvc:Axis.Separator>
                            </lvc:Axis>
                        </lvc:CartesianChart.AxisY>
                    </lvc:CartesianChart>
                    <ListView Grid.Row="3" BorderThickness="0" Opacity=".6" HorizontalAlignment="Left"  Margin="120,10,0,0" Name="ListView1" 
                          VerticalAlignment="Top" ItemsSource="{Binding TitleItems}" >
                    <Interactions:Interaction.Triggers>
                        <Interactions:EventTrigger EventName="PreviewMouseLeftButtonUp">
                            <Interactions:InvokeCommandAction Command="{Binding ClickChartSeriesCmd}" CommandParameter="{Binding ElementName=ListView1, Path=SelectedItem}"/>
                        </Interactions:EventTrigger>
                    </Interactions:Interaction.Triggers>
                        <ListView.ItemTemplate>
                        <DataTemplate DataType="shared:TitleItem">
                            <TextBlock Text="{Binding Path=TitleName}" Foreground="{Binding Path=Fill}" FontSize="18"  Margin="10,0,0,0"/>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <ContentPresenter />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
                    <lvc:CartesianChart Margin="10,0,10,0"  Grid.Row="4" DisableAnimations="True" Zoom="Y" ScrollMode="X" Hoverable="False" Background="Transparent" ScrollBarFill="#25FFFFFF" 
                                        DataTooltip="{x:Null}" ScrollHorizontalFrom="{Binding AxisXMin, Mode=TwoWay}" ScrollHorizontalTo="{Binding AxisXMax, Mode=TwoWay}" >
                        <lvc:CartesianChart.Resources>
                            <Style TargetType="lvc:Separator">
                                <Setter Property="IsEnabled" Value="False"></Setter>
                            </Style>
                        </lvc:CartesianChart.Resources>
                        <lvc:CartesianChart.Series>
                            <enums:GLineSeries Values="{Binding Chart1Values}" Visibility="{Binding Chart1Toggle, Converter={StaticResource BoolToVis}, Mode=TwoWay}" Stroke="{Binding Chart1Color, Mode=TwoWay}" StrokeThickness="1" Fill="Transparent" PointGeometry="{x:Null}" AreaLimit="0" LineSmoothness="0"/>
                            <enums:GLineSeries Values="{Binding Chart2Values}" Visibility="{Binding Chart2Toggle, Converter={StaticResource BoolToVis}, Mode=TwoWay}" Stroke="{Binding Chart2Color, Mode=TwoWay}" StrokeThickness="1" Fill="Transparent" PointGeometry="{x:Null}" AreaLimit="0" LineSmoothness="0"/>
                            <enums:GLineSeries Values="{Binding Chart3Values}" Visibility="{Binding Chart3Toggle, Converter={StaticResource BoolToVis}, Mode=TwoWay}" Stroke="{Binding Chart3Color, Mode=TwoWay}" StrokeThickness="1" Fill="Transparent" PointGeometry="{x:Null}" AreaLimit="0" LineSmoothness="0"/>
                            <enums:GLineSeries Values="{Binding Chart4Values}" Visibility="{Binding Chart4Toggle, Converter={StaticResource BoolToVis}, Mode=TwoWay}" Stroke="{Binding Chart4Color, Mode=TwoWay}" StrokeThickness="1" Fill="Transparent" PointGeometry="{x:Null}" AreaLimit="0" LineSmoothness="0"/>
                            <enums:GLineSeries Values="{Binding Chart5Values}" Visibility="{Binding Chart5Toggle, Converter={StaticResource BoolToVis}, Mode=TwoWay}" Stroke="{Binding Chart5Color, Mode=TwoWay}" StrokeThickness="1" Fill="Transparent" PointGeometry="{x:Null}" AreaLimit="0" LineSmoothness="0"/>
                            <enums:GLineSeries Values="{Binding Chart6Values}" Visibility="{Binding Chart6Toggle, Converter={StaticResource BoolToVis}, Mode=TwoWay}" Stroke="{Binding Chart6Color, Mode=TwoWay}" StrokeThickness="1" Fill="Transparent" PointGeometry="{x:Null}" AreaLimit="0" LineSmoothness="0"/>
                        </lvc:CartesianChart.Series>
                        <lvc:CartesianChart.AxisX >
                            <lvc:Axis ShowLabels="False" DisableAnimations="True" MaxValue="{Binding EndDateTicks, Mode=TwoWay}" MinValue="{Binding StartDateTicks, Mode=TwoWay}">
                            </lvc:Axis>
                        </lvc:CartesianChart.AxisX>
                        <lvc:CartesianChart.AxisY>
                            <lvc:Axis ShowLabels="False" />
                        </lvc:CartesianChart.AxisY>
                    </lvc:CartesianChart>
                </Grid>
            </md:DrawerHost>
        </Grid>
        </md:DialogHost>
    </Grid>
</Window>
